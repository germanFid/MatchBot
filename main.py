import config # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥-—Ñ–∞–π–ª config.py
import telebot # –ë–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Bot API
from telebot import types 
import pymongo # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å MongoDB
from pymongo import MongoClient
import random 
import json # –ù–∞ –≤—Å—è–∫–∏–π –ø–æ–∂–∞—Ä–Ω—ã–π, –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON
from bson.objectid import ObjectId

bot = telebot.TeleBot(config.TOKEN) # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞

client = MongoClient('localhost', 27017) # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
db = client['matchBot'] # –ë–µ—Ä–µ–º –Ω—É–∂–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

usr = db['usr'] # –ë–µ—Ä–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

class Person:
    def __init__(self, first_name, last_name, gender, tgid):
        self.tgid = tgid
        
        self.first_name = first_name
        self.last_name = last_name
        self.gender = gender

        self.likeInbox = [] # –õ–∞–π–∫–∏ —á–µ–ª—É
        self.likeOutbox = [] # –¢–µ, –∫–æ–≥–æ —á–µ–ª –ª–∞–π–∫–Ω—É–ª

    def likeBy(self, from_person):
        self.likeInbox.append(from_person.tgid)
        from_person.likeOutbox.append(self.tgid)
        if from_person.tgid in self.likeOutbox:
            print('MATCH!', from_person.first_name, 'and', people[str(self.tgid)].first_name, 'are dancing from now!')

    def toDict(self):
        d = {}
        d['tgid'] = self.tgid

        d['first_name'] = self.first_name
        d['last_name'] = self.last_name
        d['gender'] = self.gender

        d['inbox'] = self.likeInbox
        d['outbox'] = self.likeOutbox

        return d

regdata = {}
people = {}

boysids = []
girlsids = []

findData = {}
def finder_for_boys(message):
    u = str(message.from_user.id)

    if findData[u] != 0:
        if message.text == '‚úÖ –î–∞':
            people[girlsids[findData[u] - 1]].likeBy(people[u])

    if findData[u] == len(girlsids):
        bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ! –í—ã –ø—Ä–æ—à–ª–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –ø–æ–∏—Å–∫–∞.')
        findData[u] = 0
        usr.find_one_and_delete({'tgid' : u})
        usr.insert_one(people[u].toDict())
        menu(message)
    
    i = girlsids[findData[u]]
    test = people[i]

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('‚úÖ –î–∞'), types.KeyboardButton('üî¥ –ù–µ—Ç'))

    msg = bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å —Å ' + test.first_name + ' ' + test.last_name + '?', reply_markup=markup)
    
    print('--', findData[u])
    if findData[u] < len(girlsids):
        findData[u] += 1
        bot.register_next_step_handler(msg, finder_for_boys)

def reggender(message):
    if message.text == 'üßë –ú—É–∂—Å–∫–æ–π':
        regdata[message.from_user.id]['gender'] = True

    elif message.text == 'üë© –ñ–µ–Ω—Å–∫–∏–π':
        regdata[message.from_user.id]['gender'] = False

    else:
        msg = bot.send_message(message.chat.id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ —Å–Ω–∏–∑—É.')
        bot.register_next_step_handler(msg, reggender)
        
    people[message.from_user.id] = Person(regdata[message.from_user.id]['first_name'], regdata[message.from_user.id]['last_name'], regdata[message.from_user.id]['gender'], str(message.from_user.id))
    usr.insert_one(people[message.from_user.id].toDict())
    regdata[str(message.from_user.id)] = None
    bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!')
    menu(message)

def reglastname(message):
    regdata[message.from_user.id]['last_name'] = message.text

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('üßë –ú—É–∂—Å–∫–æ–π'), types.KeyboardButton('üë© –ñ–µ–Ω—Å–∫–∏–π'))

    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª.', reply_markup=markup)
    bot.register_next_step_handler(msg, reggender) # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é reggender

def regname(message):
    regdata[message.from_user.id] = {'first_name' : message.text}
    msg = bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é.')
    bot.register_next_step_handler(msg, reglastname) # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é reglastname

@bot.message_handler(commands=['menu','start']) # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π / –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
def menu(message): # –ê—Ä–≥—É–º–µ–Ω—Ç message –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    if usr.find_one({'tgid' : str(message.from_user.id)}) == None: # –ù–∞—à–ª–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        msg = bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ì–µ—Ä–º–∞–Ω) –§–∞–º–∏–ª–∏—é –≤–≤–æ–¥–∏—Ç—å –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–Ω–æ!')
        bot.register_next_step_handler(msg, regname) # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é regname
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton('üìÑ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'), types.KeyboardButton('üîµ –ú–æ–∏ –º—ç—Ç—á–∏'), types.KeyboardButton('üîé –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫'))

        msg = bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫–∏–π –Ω–∏–∂–µ', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def quote(message):
    if message.text == 'üìÑ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
        boys = '–°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤—à–∏—Ö—Å—è —é–Ω–æ—à–µ–π :\n'
        girls = '–°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤—à–∏—Ö—Å—è –¥–µ–≤—É—à–µ–∫ :\n'
        for i in people:
            obj = people[i]
            if obj.gender:
                boys += ('- ' + obj.first_name + ' ' + obj.last_name + '\n')
            else:
                girls += ('- ' + obj.first_name + ' ' + obj.last_name + '\n')

        msg = bot.send_message(message.chat.id, boys + '\n' + girls)

    elif message.text == 'üîé –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫':
        u = str(message.from_user.id)
        if people[u].gender == True:
            if len(girlsids) > 0:
                finder_for_boys(message)
            else:
                bot.send_message(message.chat.id, '–ù–∏ –æ–¥–Ω–∞ –¥–µ–≤–æ—á–∫–∞ –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å–∏—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞—Å—å!')
        else:
            pass

    else:
        bot.send_message(message.chat.id, '–§—É–Ω–∫—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç')

b, g = [0, 0]

for i in usr.find({'gender' : True}):
    people[i['tgid']] = Person(i['first_name'], i['last_name'], i['gender'], i['tgid'])
    boysids.append(i['tgid'])
    b += 1

for i in usr.find({'gender' : False}):
    people[i['tgid']] = Person(i['first_name'], i['last_name'], i['gender'], i['tgid'])
    girlsids.append(i['tgid'])
    g += 1

for i in people:
    findData[i] = 0

print('=== BOT READY ===')
print('loaded', b, 'boys and', g ,'girls')

if __name__ == '__main__': # –®—Ç—É–∫–∞, –∑–∞–ø—É—Å–∫–∞—é—â–∞—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –≤ Online-—Ä–µ–∂–∏–º–µ
     bot.polling(none_stop=True)